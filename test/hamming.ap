macro hamming_distance (String s, int d) {
    Counter cnt;
    foreach (char c : s) {
        if(c != input())
            cnt.count();
    }
    if(cnt <= d)
        report;
    cnt.reset();
}

network () {
    /*{
        String[] array = { "AGTC","GTCT","TCTC","CTCT","TCTC","CTCG",
        "TCGA","CGAG","TTAG","TAGA","AGAC","GACG","ACGG","CGGT","GGTC",
        "GTCA","GATC","ATCA","TCAG","CAGT","AGTT","GTTC","TTCA","TCAC" } ;
        
        some (String s : array) {
            hamming_distance(s,2);
        }
    }*/
    hamming_distance("AGTC",2);
    hamming_distance("GTCT",2);
    hamming_distance("TCTC",2);
    hamming_distance("CTCT",2);
    hamming_distance("TCTC",2);
    hamming_distance("CTCG",2);
    hamming_distance("TCGA",2);
    hamming_distance("CGAG",2);
    hamming_distance("TTAG",2);
    hamming_distance("TAGA",2);
    hamming_distance("AGAC",2);
    hamming_distance("GACG",2);
    hamming_distance("ACGG",2);
    hamming_distance("CGGT",2);
    hamming_distance("GGTC",2);
    hamming_distance("GTCA",2);
    hamming_distance("GATC",2);
    hamming_distance("ATCA",2);
    hamming_distance("TCAG",2);
    hamming_distance("CAGT",2);
    hamming_distance("AGTT",2);
    hamming_distance("GTTC",2);
    hamming_distance("TTCA",2);
    hamming_distance("TCAC",2);
}
